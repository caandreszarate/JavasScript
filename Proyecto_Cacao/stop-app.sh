#!/bin/bash

# Script para detener CacaoControl completo
echo "üõë Deteniendo CacaoControl - Sistema de Gesti√≥n de Cultivo de Cacao"
echo "üìç Granada, Meta, Colombia"
echo "üìÖ $(date)"
echo ""

# Detener frontend
echo "üé® Deteniendo frontend..."
pkill -f "craco.*start" 2>/dev/null && echo "‚úÖ Frontend detenido" || echo "‚ÑπÔ∏è Frontend no estaba ejecut√°ndose"

# Detener backend
echo "‚öôÔ∏è Deteniendo backend..."
pkill -f "node.*server/index.js" 2>/dev/null && echo "‚úÖ Backend detenido" || echo "‚ÑπÔ∏è Backend no estaba ejecut√°ndose"

# Detener cualquier proceso de Node.js relacionado
echo "üßπ Limpiando procesos de Node.js..."
pkill -f "node.*Proyecto_Cacao" 2>/dev/null || true

# Liberar puertos si est√°n ocupados
echo "üîì Liberando puertos..."
if lsof -i :3000 > /dev/null 2>&1; then
    echo "üîì Liberando puerto 3000..."
    lsof -ti:3000 | xargs kill -9 2>/dev/null || true
fi

if lsof -i :8000 > /dev/null 2>&1; then
    echo "üîì Liberando puerto 8000..."
    lsof -ti:8000 | xargs kill -9 2>/dev/null || true
fi

# Verificar que los procesos se hayan detenido
sleep 2

echo ""
echo "üîç Verificando estado final..."

# Verificar puertos
if lsof -i :3000 > /dev/null 2>&1; then
    echo "‚ö†Ô∏è Puerto 3000 a√∫n ocupado"
else
    echo "‚úÖ Puerto 3000 libre"
fi

if lsof -i :8000 > /dev/null 2>&1; then
    echo "‚ö†Ô∏è Puerto 8000 a√∫n ocupado"
else
    echo "‚úÖ Puerto 8000 libre"
fi

# MongoDB se mantiene ejecut√°ndose por defecto
echo ""
echo "‚ÑπÔ∏è MongoDB se mantiene ejecut√°ndose"
echo "   Para detener MongoDB: brew services stop mongodb/brew/mongodb-community"

echo ""
echo "‚úÖ ¬°CacaoControl detenido exitosamente!"
echo ""
